{"version":3,"sources":["reducers/posts.js","actions/posts.js","reducers/modal.js","actions/modal.js","components/PostForm/PostForm.js","components/PostUpdateModal/PostUpdateModal.js","components/PostItem.js","components/MainPage.js","components/InfoPage.js","components/Header.js","components/Footer.js","components/PostCreate.js","components/Spinner/Spinner.js","components/Comment/Comment.js","components/Post/Post.js","components/MyPosts.js","components/Modal/Modal.js","App.js","reportWebVitals.js","reducers/user.js","reducers/comments.js","reducers/index.js","index.js","store.js"],"names":["SET_POST_LIST","SET_POST","SET_ERROR","SET_POST_LIST_MORE","initialState","postList","posts","isError","page","count","userSchema","schema","Entity","commentsSchema","user","postSchema","comments","setPosts","data","normalize","result","entities","type","payload","post","users","setPostsMore","setIsError","setPost","modalData","SET_MODAL_DATA","CLEAN_MODAL_DATA","closeModal","PostForm","props","onButtonClick","buttonTitle","className","defaultTitle","defaultDescription","defaultTopic","React","useState","title","setTitle","description","setDescription","topic","setTopic","name","value","onChange","event","target","onClick","preventDefault","PostUpdateModal","postId","dispatch","useDispatch","handleUpdate","newPost","fetch","headers","body","JSON","stringify","method","then","response","json","updatedPost","stopPropagation","PostItem","id","useSelector","state","to","MainPage","useEffect","a","results","map","length","getState","InfoPage","Header","Footer","PostCreate","history","useHistory","push","Spinner","Comment","text","date_creation","username","Post","useParams","document","fetchPost","comment_set","comment","MyPosts","Modal","modal","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","includes","ReactDOM","render","StrictMode","store","createStore","composeWithDevTools","applyMiddleware","thunk","getElementById"],"mappings":"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","file":"static/js/main.1096e166.chunk.js","sourcesContent":["export const SET_POST_LIST = 'SET_POST_LIST';\nexport const SET_POST = 'SET_POST';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_POST_LIST_MORE = 'SET_POST_LIST_MORE';\n\nconst initialState = {\n  postList: [],\n  posts: {},\n  isError: false,\n  page: 0,\n  count: 0,\n};\n\nexport function posts(state = initialState, action) {\n  switch (action.type) {\n    case SET_POST_LIST: {\n      return {\n        count: action.payload.count,\n        postList: action.payload.postList,\n        posts: action.payload.posts,\n        isError: false,\n        page: 1,\n      };\n    }\n\n    case SET_POST_LIST_MORE: {\n      return {\n        ...state,\n        postList: [...state.postList, ...action.payload.postList],\n        posts: { ...state.posts, ...action.payload.posts },\n        isError: false,\n        page: state.page + 1,\n      };\n    }\n\n    case SET_ERROR: {\n      return {\n        ...state,\n        isError: true,\n      };\n    }\n\n    case SET_POST: {\n      const post = action.payload;\n      let postList = state.postList;\n\n      if (!postList.includes(post.id)) {\n        postList.push(post.id);\n      }\n\n      return {\n        ...state,\n        postList,\n        posts: {\n          ...state.posts,\n          [post.id]: post,\n        },\n        isError: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { schema, normalize } from 'normalizr';\nimport {\n  SET_POST_LIST,\n  SET_POST,\n  SET_ERROR,\n  SET_POST_LIST_MORE,\n} from '../reducers/posts';\n\nconst userSchema = new schema.Entity('user');\nconst commentsSchema = new schema.Entity('comments', { user: userSchema });\nconst postSchema = new schema.Entity('post', {\n  user: userSchema,\n  comments: [commentsSchema],\n});\n\nfunction setPosts(data, count) {\n  const { result, entities } = normalize(data, [postSchema]);\n\n  return {\n    type: SET_POST_LIST,\n    payload: {\n      count,\n      postList: result,\n      posts: entities.post,\n      users: entities.user,\n      comments: entities.comments,\n    },\n  };\n}\n\nfunction setPostsMore(data) {\n  const { result, entities } = normalize(data, [postSchema]);\n\n  return {\n    type: SET_POST_LIST_MORE,\n    payload: {\n      postList: result,\n      posts: entities.post,\n      users: entities.user,\n      comments: entities.comments,\n    },\n  };\n}\n\nfunction setIsError() {\n  return {\n    type: SET_ERROR,\n  };\n}\n\nexport function fetchPosts() {\n  return async (dispatch) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/posts');\n      const data = await response.json();\n      dispatch(setPosts(data.results, data.count));\n    } catch {\n      dispatch(setIsError());\n    }\n  };\n}\n\nexport function fetchPostsMore() {\n  return async (dispatch, getState) => {\n    try {\n      const state = getState();\n      const page = state.posts.page;\n      const response = await fetch(\n        `http://localhost:8000/api/posts?page=${page + 1}`\n      );\n      const data = await response.json();\n      dispatch(setPostsMore(data.results));\n    } catch {\n      dispatch(setIsError());\n    }\n  };\n}\n\nexport function fetchPost(postId) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/posts/${postId}`);\n      const post = await response.json();\n      document.title = post.title;\n\n      dispatch(setPost(post));\n    } catch {\n      dispatch(setIsError());\n    }\n  };\n}\n\nexport function setPost(payload) {\n  return {\n    type: SET_POST,\n    payload,\n  };\n}\n","const initialState = {\n  modalData: null,\n};\n\nexport const SET_MODAL_DATA = 'SET_MODAL_DATA';\nexport const CLEAN_MODAL_DATA = 'CLEAN_MODAL_DATA';\n\nexport function modal(state = initialState, action) {\n  switch (action.type) {\n    case SET_MODAL_DATA:\n      return {\n        modalData: action.payload,\n      };\n    case CLEAN_MODAL_DATA:\n      return {\n        modalData: null,\n      };\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_MODAL_DATA, CLEAN_MODAL_DATA } from '../reducers/modal';\n\nexport function setModalData(payload) {\n  return {\n    type: SET_MODAL_DATA,\n    payload,\n  };\n}\n\nexport function closeModal() {\n  return {\n    type: CLEAN_MODAL_DATA,\n  };\n}\n","import React from 'react';\n\nexport function PostForm(props) {\n  const {\n    onButtonClick,\n    buttonTitle,\n    className,\n    defaultTitle = '',\n    defaultDescription = '',\n    defaultTopic = '',\n  } = props;\n  const [title, setTitle] = React.useState(defaultTitle);\n  const [description, setDescription] = React.useState(defaultDescription);\n  const [topic, setTopic] = React.useState(defaultTopic);\n\n  const handleClick = (event) => {\n    const post = {\n      title,\n      description,\n      topic,\n    };\n    event.preventDefault();\n    onButtonClick(post);\n  };\n\n  return (\n    <div>\n      <form className={className}>\n        <div>\n          <label>Название</label>\n          <input\n            name='title'\n            type='text'\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Описание</label>\n          <input\n            name='description'\n            type='text'\n            value={description}\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Тема</label>\n          <input\n            name='topic'\n            type='text'\n            value={topic}\n            onChange={(event) => {\n              setTopic(event.target.value);\n            }}\n          />\n        </div>\n        <button type='submit' onClick={handleClick}>\n          {buttonTitle}\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setModalData, closeModal } from '../../actions/modal';\nimport { setPost } from '../../actions/posts';\nimport { PostForm } from '../PostForm';\n\nexport function PostUpdateModal(props) {\n  const { postId, post } = props;\n  const dispatch = useDispatch();\n\n  const handleUpdate = (newPost) => {\n    fetch(`http://localhost:3001/posts/${postId}`, {\n      headers: {\n        'Content-Type': 'Application/json',\n      },\n      body: JSON.stringify(newPost),\n      method: 'PUT',\n    })\n      .then((response) => response.json())\n      .then((updatedPost) => {\n        dispatch(closeModal());\n        dispatch(setPost(updatedPost));\n      });\n  };\n\n  return (\n    <button\n      onClick={(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch(\n          setModalData(\n            <PostForm\n              buttonTitle='Сохранить'\n              className='post-update'\n              onButtonClick={handleUpdate}\n              defaultTitle={post.title}\n              defaultDescription={post.description}\n              defaultTopic={post.topic}\n            />\n          )\n        );\n      }}\n    >\n      Редактировать пост\n    </button>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { PostUpdateModal } from './PostUpdateModal';\n\nexport default function PostItem(props) {\n  const { id } = props;\n  const post = useSelector((state) => state.posts.posts[id]);\n  const { title, description, topic } = post || {};\n\n  return (\n    <div>\n      <Link to={'/post/' + id}>\n        <div className='item'>\n          <h4>{title}</h4>\n          <p>{description}</p>\n          <b>{topic}</b>\n          <br />\n          <PostUpdateModal postId={id} post={{ title, description, topic }} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts, fetchPostsMore } from '../actions/posts';\nimport PostItem from './PostItem';\n\nexport default function MainPage() {\n  const dispatch = useDispatch();\n  const postList = useSelector((state) => state.posts.postList);\n  const isError = useSelector((state) => state.posts.isError);\n  const count = useSelector((state) => state.posts.count);\n\n  React.useEffect(() => {\n    dispatch(fetchPosts());\n  }, []);\n\n  if (isError) {\n    return (\n      <div className='wrapper'>\n        <h1>Произошла ошибка!</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className='wrapper'>\n        {postList.map((postId) => (\n          <PostItem key={postId} id={postId} />\n        ))}\n      </div>\n      {postList.length < count && (\n        <button\n          className='post-list_button'\n          onClick={() => dispatch(fetchPostsMore())}\n        >\n          Показать еще\n        </button>\n      )}\n    </div>\n  );\n}\n","export default function InfoPage() {\n  return (\n    <div>\n      Отсюда естественно следует, что привлечение аудитории консолидирует\n      общественный BTL. Стимулирование сбыта тормозит фирменный стиль, не\n      считаясь с затратами. Один из признанных классиков маркетинга Ф.Котлер\n      определяет это так: агентская комиссия синхронизирует эмпирический\n      повторный контакт. SWOT-анализ раскручивает комплексный направленный\n      маркетинг, отвоевывая рыночный сегмент. Организация слубы маркетинга\n      индуцирует культурный нестандартный подход. Лидерство в продажах усиливает\n      социометрический сегмент рынка, не считаясь с затратами. Согласно\n      последним исследованиям, взаимодействие корпорации и клиента реально\n      масштабирует имидж предприятия. Искусство медиапланирования специфицирует\n      обществвенный фирменный стиль, размещаясь во всех медиа. До недавнего\n      времени считалось, что бизнес-план специфицирует из ряда вон выходящий\n      системный анализ. Департамент маркетинга и продаж, вопреки мнению\n      П.Друкера, осмысленно отражает культурный имидж. Основная стадия\n      проведения рыночного исследования искажает ролевой презентационный\n      материал.\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <header>\n      <div className='menu'>\n        <Link to='/'>Главная</Link>\n        <Link to='/my_posts'>Мои записи</Link>\n        <Link to='/post_create'>Создать пост</Link>\n        <Link to='/info'>Полезная информация</Link>\n      </div>\n    </header>\n  );\n}\n","export default function Footer() {\n  return <footer>О сайте</footer>;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PostForm } from './PostForm';\n\nexport default function PostCreate() {\n  const history = useHistory();\n\n  const handleClick = (post) => {\n    fetch('http://localhost:3001/posts', {\n      headers: {\n        'Content-Type': 'Application/json',\n      },\n      body: JSON.stringify(post),\n      method: 'POST',\n    })\n      .then((response) => response.json())\n      .then((data) => history.push(`/post/${data.id}`));\n  };\n\n  return (\n    <PostForm\n      className='post-create_form'\n      buttonTitle='Создать пост'\n      onButtonClick={handleClick}\n    />\n  );\n}\n","import './spinner.css';\n\nexport function Spinner() {\n  return <div className='loader'></div>;\n}\n","import React from 'react';\n\nexport function Comment(props) {\n  const { text, date_creation, user } = props;\n\n  return (\n    <div>\n      <div>{text}</div>\n      <div>{date_creation}</div>\n      <div>{user.username}</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchPost } from '../../actions/posts';\nimport { Spinner } from '../Spinner';\nimport { PostUpdateModal } from '../PostUpdateModal';\nimport { Comment } from '../Comment';\nimport './post.css';\n\nfunction Post() {\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const { postId } = params;\n  const post = useSelector((state) => state.posts.posts[postId]);\n  const isError = useSelector((state) => state.posts.isError);\n\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n    dispatch(fetchPost(postId));\n  }, []);\n\n  if (isError) {\n    return (\n      <div>\n        <h1>Произошла ошибка при загрузке поста</h1>\n      </div>\n    );\n  }\n\n  if (!post) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <div className='wrapper'>\n        <div className='item'>\n          <h4>{post.title}</h4>\n          <p>{post.description}</p>\n          <b>{post.topic}</b>\n          <br />\n          <PostUpdateModal post={post} postId={postId} />\n        </div>\n      </div>\n      <div className='comment_wrapper'>\n        {post.comment_set.map((comment) => (\n          <Comment key={comment.id} {...comment} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","export default function MyPosts() {\n  return <div>Мои посты</div>;\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { closeModal } from '../../actions/modal';\nimport './modal.css';\n\nexport function Modal() {\n  const dispatch = useDispatch();\n  const modalData = useSelector((state) => state.modal.modalData);\n\n  if (!modalData) {\n    return null;\n  }\n\n  return (\n    <div className='modal_wrapper' onClick={() => dispatch(closeModal())}>\n      <div className='modal' onClick={(event) => event.stopPropagation()}>\n        {modalData}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport MainPage from './components/MainPage';\nimport InfoPage from './components/InfoPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PostCreate from './components/PostCreate';\nimport Post from './components/Post';\nimport MyPosts from './components/MyPosts';\nimport { Modal } from './components/Modal';\n\nexport function App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path='/info'>\n            <InfoPage />\n          </Route>\n          <Route path='/post_create'>\n            <PostCreate />\n          </Route>\n          <Route path='/post/:postId'>\n            <Post />\n          </Route>\n          <Route path='/my_posts'>\n            <MyPosts />\n          </Route>\n          <Route path='/'>\n            <MainPage />\n          </Route>\n        </Switch>\n      </Router>\n      <Modal />\n      <Footer />\n    </>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_POST_LIST } from './posts';\n\nconst initialState = {\n  users: {},\n};\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case SET_POST_LIST: {\n      if (action.payload.users) {\n        return {\n          ...state.users,\n          ...action.payload.users,\n        };\n      }\n\n      return state;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_POST_LIST } from './posts';\n\nconst initialState = {\n  comments: {},\n};\n\nexport function comments(state = initialState, action) {\n  switch (action.type) {\n    case SET_POST_LIST: {\n      if (action.payload.comments) {\n        return {\n          ...state.comments,\n          ...action.payload.comments,\n        };\n      }\n\n      return state;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport { modal } from './modal';\nimport { posts } from './posts';\nimport { user } from './user';\nimport { comments } from './comments';\n\nexport const reducers = combineReducers({ modal, posts, user, comments });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport { initStore } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={initStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducers } from './reducers';\n\nexport function initStore() {\n  const store = {};\n\n  return createStore(\n    reducers,\n    store,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n}\n"],"sourceRoot":""}