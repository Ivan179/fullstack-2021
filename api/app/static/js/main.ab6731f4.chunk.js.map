{"version":3,"sources":["reducers/posts.js","actions/posts.js","reducers/modal.js","actions/modal.js","components/PostForm/PostForm.js","components/PostUpdateModal/PostUpdateModal.js","components/PostItem.js","components/MainPage.js","components/InfoPage.js","components/Header.js","components/Footer.js","components/PostCreate.js","components/Spinner/Spinner.js","components/Post/Post.js","components/MyPosts.js","components/Modal/Modal.js","App.js","reportWebVitals.js","reducers/user.js","reducers/comments.js","reducers/index.js","index.js","store.js"],"names":["SET_POST_LIST","SET_POST","SET_ERROR","initialState","postList","posts","isError","userSchema","schema","Entity","commentsSchema","user","postSchema","comments","setPosts","data","normalize","result","entities","type","payload","post","users","setIsError","setPost","modalData","SET_MODAL_DATA","CLEAN_MODAL_DATA","closeModal","PostForm","props","onButtonClick","buttonTitle","className","defaultTitle","defaultDescription","defaultTopic","React","useState","title","setTitle","description","setDescription","topic","setTopic","name","value","onChange","event","target","onClick","preventDefault","PostUpdateModal","postId","dispatch","useDispatch","handleUpdate","newPost","fetch","headers","body","JSON","stringify","method","then","response","json","updatedPost","stopPropagation","PostItem","id","useSelector","state","to","MainPage","useEffect","a","map","InfoPage","Header","Footer","PostCreate","history","useHistory","push","Spinner","Post","useParams","document","fetchPost","MyPosts","Modal","modal","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","includes","ReactDOM","render","StrictMode","store","createStore","composeWithDevTools","applyMiddleware","thunk","getElementById"],"mappings":"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","file":"static/js/main.ab6731f4.chunk.js","sourcesContent":["export const SET_POST_LIST = 'SET_POST_LIST';\nexport const SET_POST = 'SET_POST';\nexport const SET_ERROR = 'SET_ERROR';\n\nconst initialState = {\n  postList: [],\n  posts: {},\n  isError: false,\n};\n\nexport function posts(state = initialState, action) {\n  switch (action.type) {\n    case SET_POST_LIST: {\n      return {\n        postList: action.payload.postList,\n        posts: action.payload.posts,\n        isError: false,\n      };\n    }\n\n    case SET_ERROR: {\n      return {\n        ...state,\n        isError: true,\n      };\n    }\n\n    case SET_POST: {\n      const post = action.payload;\n      let postList = state.postList;\n\n      if (!postList.includes(post.id)) {\n        postList.push(post.id);\n      }\n\n      return {\n        postList,\n        posts: {\n          ...state.posts,\n          [post.id]: post,\n        },\n        isError: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { schema, normalize } from 'normalizr';\nimport { SET_POST_LIST, SET_POST, SET_ERROR } from '../reducers/posts';\n\nconst userSchema = new schema.Entity('user');\nconst commentsSchema = new schema.Entity('comments', { user: userSchema });\nconst postSchema = new schema.Entity('post', {\n  user: userSchema,\n  comments: [commentsSchema],\n});\n\nfunction setPosts(data) {\n  const { result, entities } = normalize(data, [postSchema]);\n\n  return {\n    type: SET_POST_LIST,\n    payload: {\n      postList: result,\n      posts: entities.post,\n      users: entities.user,\n      comments: entities.comments,\n    },\n  };\n}\n\nfunction setIsError() {\n  return {\n    type: SET_ERROR,\n  };\n}\n\nexport function fetchPosts() {\n  return async (dispatch) => {\n    try {\n      const response = await fetch('http://localhost:3001/posts');\n      const data = await response.json();\n      dispatch(setPosts(data));\n    } catch {\n      dispatch(setIsError());\n    }\n  };\n}\n\nexport function fetchPost(postId) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(`http://localhost:3001/posts/${postId}`);\n      const post = await response.json();\n      document.title = post.title;\n\n      dispatch(setPost(post));\n    } catch {\n      dispatch(setIsError());\n    }\n  };\n}\n\nexport function setPost(payload) {\n  return {\n    type: SET_POST,\n    payload,\n  };\n}\n","const initialState = {\n  modalData: null,\n};\n\nexport const SET_MODAL_DATA = 'SET_MODAL_DATA';\nexport const CLEAN_MODAL_DATA = 'CLEAN_MODAL_DATA';\n\nexport function modal(state = initialState, action) {\n  switch (action.type) {\n    case SET_MODAL_DATA:\n      return {\n        modalData: action.payload,\n      };\n    case CLEAN_MODAL_DATA:\n      return {\n        modalData: null,\n      };\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_MODAL_DATA, CLEAN_MODAL_DATA } from '../reducers/modal';\n\nexport function setModalData(payload) {\n  return {\n    type: SET_MODAL_DATA,\n    payload,\n  };\n}\n\nexport function closeModal() {\n  return {\n    type: CLEAN_MODAL_DATA,\n  };\n}\n","import React from 'react';\n\nexport function PostForm(props) {\n  const {\n    onButtonClick,\n    buttonTitle,\n    className,\n    defaultTitle = '',\n    defaultDescription = '',\n    defaultTopic = '',\n  } = props;\n  const [title, setTitle] = React.useState(defaultTitle);\n  const [description, setDescription] = React.useState(defaultDescription);\n  const [topic, setTopic] = React.useState(defaultTopic);\n\n  const handleClick = (event) => {\n    const post = {\n      title,\n      description,\n      topic,\n    };\n    event.preventDefault();\n    onButtonClick(post);\n  };\n\n  return (\n    <div>\n      <form className={className}>\n        <div>\n          <label>Название</label>\n          <input\n            name='title'\n            type='text'\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Описание</label>\n          <input\n            name='description'\n            type='text'\n            value={description}\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Тема</label>\n          <input\n            name='topic'\n            type='text'\n            value={topic}\n            onChange={(event) => {\n              setTopic(event.target.value);\n            }}\n          />\n        </div>\n        <button type='submit' onClick={handleClick}>\n          {buttonTitle}\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setModalData, closeModal } from '../../actions/modal';\nimport { setPost } from '../../actions/posts';\nimport { PostForm } from '../PostForm';\n\nexport function PostUpdateModal(props) {\n  const { postId, post } = props;\n  const dispatch = useDispatch();\n\n  const handleUpdate = (newPost) => {\n    fetch(`http://localhost:3001/posts/${postId}`, {\n      headers: {\n        'Content-Type': 'Application/json',\n      },\n      body: JSON.stringify(newPost),\n      method: 'PUT',\n    })\n      .then((response) => response.json())\n      .then((updatedPost) => {\n        dispatch(closeModal());\n        dispatch(setPost(updatedPost));\n      });\n  };\n\n  return (\n    <button\n      onClick={(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch(\n          setModalData(\n            <PostForm\n              buttonTitle='Сохранить'\n              className='post-update'\n              onButtonClick={handleUpdate}\n              defaultTitle={post.title}\n              defaultDescription={post.description}\n              defaultTopic={post.topic}\n            />\n          )\n        );\n      }}\n    >\n      Редактировать пост\n    </button>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { PostUpdateModal } from './PostUpdateModal';\n\nexport default function PostItem(props) {\n  const { id } = props;\n  const post = useSelector((state) => state.posts.posts[id]);\n  const { title, description, topic } = post || {};\n\n  return (\n    <div>\n      <Link to={'/post/' + id}>\n        <div className='item'>\n          <h4>{title}</h4>\n          <p>{description}</p>\n          <b>{topic}</b>\n          <br />\n          <PostUpdateModal postId={id} post={{ title, description, topic }} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../actions/posts';\nimport PostItem from './PostItem';\n\nexport default function MainPage() {\n  const dispatch = useDispatch();\n  const postList = useSelector((state) => state.posts.postList);\n  const isError = useSelector((state) => state.posts.isError);\n\n  React.useEffect(() => {\n    dispatch(fetchPosts());\n  }, []);\n\n  if (isError) {\n    return (\n      <div className='wrapper'>\n        <h1>Произошла ошибка!</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className='wrapper'>\n      {postList.map((postId) => (\n        <PostItem key={postId} id={postId} />\n      ))}\n    </div>\n  );\n}\n","export default function InfoPage() {\n  return (\n    <div>\n      Отсюда естественно следует, что привлечение аудитории консолидирует\n      общественный BTL. Стимулирование сбыта тормозит фирменный стиль, не\n      считаясь с затратами. Один из признанных классиков маркетинга Ф.Котлер\n      определяет это так: агентская комиссия синхронизирует эмпирический\n      повторный контакт. SWOT-анализ раскручивает комплексный направленный\n      маркетинг, отвоевывая рыночный сегмент. Организация слубы маркетинга\n      индуцирует культурный нестандартный подход. Лидерство в продажах усиливает\n      социометрический сегмент рынка, не считаясь с затратами. Согласно\n      последним исследованиям, взаимодействие корпорации и клиента реально\n      масштабирует имидж предприятия. Искусство медиапланирования специфицирует\n      обществвенный фирменный стиль, размещаясь во всех медиа. До недавнего\n      времени считалось, что бизнес-план специфицирует из ряда вон выходящий\n      системный анализ. Департамент маркетинга и продаж, вопреки мнению\n      П.Друкера, осмысленно отражает культурный имидж. Основная стадия\n      проведения рыночного исследования искажает ролевой презентационный\n      материал.\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <header>\n      <div className='menu'>\n        <Link to='/'>Главная</Link>\n        <Link to='/my_posts'>Мои записи</Link>\n        <Link to='/post_create'>Создать пост</Link>\n        <Link to='/info'>Полезная информация</Link>\n      </div>\n    </header>\n  );\n}\n","export default function Footer() {\n  return <footer>О сайте</footer>;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PostForm } from './PostForm';\n\nexport default function PostCreate() {\n  const history = useHistory();\n\n  const handleClick = (post) => {\n    fetch('http://localhost:3001/posts', {\n      headers: {\n        'Content-Type': 'Application/json',\n      },\n      body: JSON.stringify(post),\n      method: 'POST',\n    })\n      .then((response) => response.json())\n      .then((data) => history.push(`/post/${data.id}`));\n  };\n\n  return (\n    <PostForm\n      className='post-create_form'\n      buttonTitle='Создать пост'\n      onButtonClick={handleClick}\n    />\n  );\n}\n","import './spinner.css';\n\nexport function Spinner() {\n  return <div className='loader'></div>;\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchPost } from '../../actions/posts';\nimport { Spinner } from '../Spinner';\nimport { PostUpdateModal } from '../PostUpdateModal';\nimport './post.css';\n\nfunction Post() {\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const { postId } = params;\n  const post = useSelector((state) => state.posts.posts[postId]);\n  const isError = useSelector((state) => state.posts.isError);\n\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n    dispatch(fetchPost(postId));\n  }, []);\n\n  if (isError) {\n    return (\n      <div>\n        <h1>Произошла ошибка при загрузке поста</h1>\n      </div>\n    );\n  }\n\n  if (!post) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className='wrapper'>\n      <div className='item'>\n        <h4>{post.title}</h4>\n        <p>{post.description}</p>\n        <b>{post.topic}</b>\n        <br />\n        <PostUpdateModal post={post} postId={postId} />\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","export default function MyPosts() {\n  return <div>Мои посты</div>;\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { closeModal } from '../../actions/modal';\nimport './modal.css';\n\nexport function Modal() {\n  const dispatch = useDispatch();\n  const modalData = useSelector((state) => state.modal.modalData);\n\n  if (!modalData) {\n    return null;\n  }\n\n  return (\n    <div className='modal_wrapper' onClick={() => dispatch(closeModal())}>\n      <div className='modal' onClick={(event) => event.stopPropagation()}>\n        {modalData}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport MainPage from './components/MainPage';\nimport InfoPage from './components/InfoPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PostCreate from './components/PostCreate';\nimport Post from './components/Post';\nimport MyPosts from './components/MyPosts';\nimport { Modal } from './components/Modal';\n\nexport function App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path='/info'>\n            <InfoPage />\n          </Route>\n          <Route path='/post_create'>\n            <PostCreate />\n          </Route>\n          <Route path='/post/:postId'>\n            <Post />\n          </Route>\n          <Route path='/my_posts'>\n            <MyPosts />\n          </Route>\n          <Route path='/'>\n            <MainPage />\n          </Route>\n        </Switch>\n      </Router>\n      <Modal />\n      <Footer />\n    </>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_POST_LIST } from './posts';\n\nconst initialState = {\n  users: {},\n};\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case SET_POST_LIST: {\n      if (action.payload.users) {\n        return {\n          ...state.users,\n          ...action.payload.users,\n        };\n      }\n\n      return state;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_POST_LIST } from './posts';\n\nconst initialState = {\n  comments: {},\n};\n\nexport function comments(state = initialState, action) {\n  switch (action.type) {\n    case SET_POST_LIST: {\n      if (action.payload.comments) {\n        return {\n          ...state.comments,\n          ...action.payload.comments,\n        };\n      }\n\n      return state;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport { modal } from './modal';\nimport { posts } from './posts';\nimport { user } from './user';\nimport { comments } from './comments';\n\nexport const reducers = combineReducers({ modal, posts, user, comments });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport { initStore } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={initStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducers } from './reducers';\n\nexport function initStore() {\n  const store = {};\n\n  return createStore(\n    reducers,\n    store,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n}\n"],"sourceRoot":""}